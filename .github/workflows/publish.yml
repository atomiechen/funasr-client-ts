name: Publish Package to npmjs

on:
  workflow_dispatch:
    inputs:
      publish_npm:
        type: boolean
        default: false
        description: Publish to npm registry
      publish_gh_release:
        type: boolean
        default: true
        description: Publish to GitHub Release
      use_changelog:
        type: boolean
        default: true
        description: Extract release notes from CHANGELOG.md
      changelog_file:
        type: string
        default: CHANGELOG.md
        description: Path to changelog file
        required: false
      release_tag:
        type: string
        description: Tag to package (empty for latest tag)
        required: false

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.set_release_tag.outputs.tag }}

    steps:
      - name: Check if all checkboxes are unchecked
        id: check_checkboxes
        run: |
          if [[ ${{ inputs.publish_npm }} == false && ${{ inputs.publish_gh_release }} == false ]]; then
            echo "All checkboxes are unchecked. Exiting workflow."
            exit 1
          fi
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Fetch all tags
        run: |
          git fetch --prune --unshallow --tags
      - name: Verify and set release tag
        id: set_release_tag
        run: |
          release_tag=${{ inputs.release_tag }}
          if [ -z "$release_tag" ]; then
            echo "Input tag is empty. Fetching latest tag."
            release_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
            if [ -z "$release_tag" ]; then
              echo "No latest tag available. Exiting workflow."
              exit 1
            fi
          else
            if ! git rev-parse -q --verify "refs/tags/$release_tag" >/dev/null; then
              echo "Invalid tag '$release_tag'. Exiting workflow."
              exit 1
            fi
          fi
          echo "tag=$release_tag" >> $GITHUB_OUTPUT
      - name: Checkout to latest tag
        run: git checkout ${{ steps.set_release_tag.outputs.tag }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - run: pnpm install --frozen-lockfile
      - run: pnpm run build
      - run: pnpm pack --pack-destination out
      # # Don't check if current branch is your publish branch (we checkout to the release tag)
      # - run: pnpm publish --no-git-checks

      - name: Store the built package
        uses: actions/upload-artifact@v4
        with:
          name: npm-package
          path: out/
      - name: Store the changelog file
        if: ${{ inputs.use_changelog }}
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: ${{ inputs.changelog_file }}

  publish-npm:
    name: Publish to npm registry
    if: ${{ inputs.publish_npm }}
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  # Required for OIDC

    steps:
      - name: Download built package
        uses: actions/download-artifact@v4
        with:
          name: npm-package
          path: out/
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      # Ensure npm 11.5.1 or later is installed
      - name: Update npm
        run: npm install -g npm@latest
      - name: Publish to npm registry
        run: npm publish ./out/*.tgz

  github-release:
    name: Sign and upload to GitHub Release
    if: ${{ inputs.publish_gh_release }}
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download built package
      uses: actions/download-artifact@v4
      with:
        name: npm-package
        path: out/
    - name: Sign the package with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./out/*.tgz
    - name: Get repository name
      id: get_repo_name
      run: |
        repo_full_name=${{ github.repository }}
        repo_name=${repo_full_name#*/}
        echo "name=$repo_name" >> $GITHUB_OUTPUT
    - name: Download the changelog file
      if: ${{ inputs.use_changelog }}
      uses: actions/download-artifact@v4
      with:
        name: changelog
    - name: Extract release notes
      if: ${{ inputs.use_changelog }}
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@v2
      with:
        changelog_file: ${{ inputs.changelog_file }}
    - name: Create GitHub Release ðŸ“¦
      uses: softprops/action-gh-release@v1
      with:
        files: |
          out/**
        tag_name: ${{ needs.build.outputs.release_tag }}
        name: ${{ steps.get_repo_name.outputs.name }} ${{ needs.build.outputs.release_tag }}
        body: |
          Release ${{ steps.get_repo_name.outputs.name }} ${{ needs.build.outputs.release_tag }}.

          ${{ steps.extract-release-notes.outputs.release_notes }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
